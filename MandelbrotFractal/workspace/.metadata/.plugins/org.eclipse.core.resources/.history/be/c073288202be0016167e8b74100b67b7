/*
 * ZoomList.cpp
 *
 *  Created on: 5 Dec 2016
 *      Author: GeorgeQuentin
 */

#include "ZoomList.h"
#include <iostream>

namespace fractalnamespace {

ZoomList::ZoomList(int width, int height): m_width(width), m_height(height) {

}

void ZoomList::addUp(const Zoom &zoom){
	zooms.push_back(zoom);


	m_xCenter += (zoom.x - m_width/2) * m_scale;
	m_yCenter += (zoom.y - m_height/2) * m_scale;

	m_scale *= zoom.scale;
	//m_scale = m_scale * zoom.scale;

	m_zoom_positions.push_back(std::make_pair(m_xCenter, m_yCenter, m_scale));
	std::cout << "ZOOM IN  "<< "center x: " << m_xCenter << " , center y: "<< m_yCenter << " scale: " << m_scale << "\n";
}

void ZoomList::addDown(const Zoom &zoom){
	zooms.push_back(zoom);

	m_xCenter += (zoom.x - m_width/2) * m_scale;
	m_yCenter += (zoom.y - m_height/2) * m_scale;

	m_scale = m_scale / zoom.scale;

	m_zoom_positions.push_back(std::make_pair(m_xCenter, m_yCenter, m_scale));
	std::cout << "ZOOM OUT  "<< "center x: " << m_xCenter << " , center y: "<< m_yCenter << " scale: " << m_scale << "\n";
}

void ZoomList::reset(int index){

	m_xCenter = m_zoom_positions[index].first;
	m_yCenter = m_zoom_positions[index].second;

	std::cout << "RESET  "<< "center x: " << m_xCenter << " , center y: "<< m_yCenter << " scale: " << m_scale << "\n";
}

std::pair<double, double> ZoomList::doZoomIn(int x, int y) {

	double xFractal = (x - m_width/2) * m_scale + m_xCenter;
	double yFractal = (y - m_height/2) * m_scale + m_yCenter;

	return std::pair<double, double>(xFractal, yFractal);
}

//std::pair<double, double> ZoomList::doZoomOut(int x, int y) {
//
//	double xFractal = (x - m_width/2) * m_scale - m_xCenter;
//	double yFractal = (y - m_height/2) * m_scale - m_yCenter;
//
//	//std::cout << "DO ZOOM  "<< "center x: " << m_xCenter << " , center y: "<< m_yCenter << "\n";
//
//	return std::pair<double, double>(xFractal, yFractal);
//}

}
