/*
 * Countries.cpp
 *
 *  Created on: Sep 6, 2016
 *      Author: GeorgeQuentin
 */

#include <iostream>
#include <map>
#include "Countries.h"
#include <string>

using namespace std;

//enum countryN {
//	Brazil,
//	Cameroun,
//	France,
//	Italy,
//	Spain,
//	Nigeria,
//	England,
//	UnitedStates,
//	China,
//	Australia
//};
//map<string, countryN> countriesList;
//
//
//
//void initializeCountries()
//{
//
//	countriesList["Brazil"] = Brazil;
//	countriesList["Cameroun"] = Cameroun;
//	countriesList["France"] = France;
//	countriesList["Italy"] = Italy;
//	countriesList["Spain"] = Spain;
//	countriesList["Nigeria"] = Nigeria;
//	countriesList["England"] = England;
//	countriesList["United States"] = UnitedStates;
//	countriesList["China"] = China;
//	countriesList["Australia"] = Australia;
//
//}

//std::string CountriesClass::countryName(std::string countryName) {
//
//	initializeCountries();
//
//	switch (countriesList[countryName])
//	{
//	case Brazil:
//		return "Brazil";
//		break;
//	case Cameroun:
//		return "Cameroun";
//		break;
//	case France:
//		return "France";
//		break;
//	case Italy:
//		return  "Italy";
//		break;
//	case Spain:
//		return  "Spain";
//		break;
//	case Nigeria:
//		return  "Nigeria";
//		break;
//	case England:
//		return "England";
//		break;
//	case UnitedStates:
//		return "United States";
//		break;
//	case China:
//		return  "China";
//		break;
//	case Australia:
//		return  "Australia";
//		break;
//	default:
//		return "We do not have this country in our selection";
//
//	}
//}


Country::Country() {
	countryName = "";
	capital = "";
	population = 0;
	nationalLanguage = "";
	currency = "";
}

Country::Country(std::string countryName, std::string capital,
		long int population, std::string nationalLanguage, std::string currency) {
	this -> countryName = countryName;
	this -> capital = capital;
	this -> population = population;
	this -> nationalLanguage = nationalLanguage;
	this -> currency = currency;
}

void Country::setCountry(std::string countryName, std::string capital,
		long int population, std::string nationalLanguage, std::string currency) {
	this -> countryName = countryName;
	this -> capital = capital;
	this -> population = population;
	this -> nationalLanguage = nationalLanguage;
	this -> currency = currency;
}

std::string Country::getCountryName() {
	return countryName;
}

std::string Country::getCapital() {
	return capital;
}
long int Country::getPopulation() {
	return population;
}
std::string Country::getNationalLanguage() {
	return nationalLanguage;
}
std::string Country::getCurrency() {
	return currency;
}

void Country::print() {
	cout << "Country Name : " << countryName << endl;
	cout << "Country Capital : " << capital << endl;
	cout << "Country Population : " << population << endl;
	cout << "Country National Language : " << nationalLanguage << endl;
	cout << "Country Currency : " << currency << endl;
}

int Country::stringToInt(std::string str) {

	const char* characters = str.c_str();

	int value = 0;
	for (int i = 0; i < strlen(characters); i++) {
		value = value + (int) characters[i];
	}

	return value;
}

void Country::countryInfo(std::string name) {

	int countryNum = stringToInt(name);

	switch (countryNum) {
	case 612:
		setCountry("Brazil", "Brasília", 210135000, "Portuguese","Brazilian Real R$");
		break;
	case 820:
		setCountry("Cameroon", "Yaoundé", 24032000, "French, English","Central African CFA franc");
		break;
	case 591:
		setCountry("France", "Paris", 64745000, "French","Euro €");
		break;
	case 515:
		setCountry("Italy", "Rome", 59864000, "Italian","Euro €");
		break;
	case 507:
		setCountry("Spain", "Madrid", 46029600, "Spanish","Euro €");
		break;
	case 703:
		setCountry("Nigeria", "Abuja", 187918000, "English","Naira ₦");
		break;
	case 697:
		setCountry("England", "London", 65185000, "English","Pound Sterling £");
		break;
	case 1245:
		setCountry("United States", "Washington", 324678000, "English","United States Dollar $");
		break;
	case 483:
		setCountry("China", "Beijing", 1380147000, "Chinese Mandarin","Renminbi ¥");
		break;
	case 934:
		setCountry("Australia", "Canberra", 24423000, "English","Australian dollar");
		break;
	case 568:
			setCountry("Canada", "Ottawa", 36387900, "English, French","Canadian Dollar $");
			break;
	case 490:
			setCountry("Japan", "Tokyo", 126432000, "Japanese","Japanese Yen ¥");
			break;
	case 644:
			setCountry("Turkey", "Ankara", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 631:
			setCountry("Russia", "Moscow", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 485:
			setCountry("India", "New Delhi", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 723:
			setCountry("Germany", "Berlin", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 1817:
			setCountry("United Arab Emirates", "Abu Dhabi", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 1113:
			setCountry("South Africa", "Pretoria", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 922:
			setCountry("Indonesia", "Jakarta", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 613:
			setCountry("Mexico", "Mexico City", 210135000, "Portuguese","Brazilian Real R$");
			break;
	case 1078:
			setCountry("Saudi Arabia", "Riyadh", 210135000, "Portuguese","Brazilian Real R$");
				break;
	case 921:
				setCountry("Argentina", "Buenos Aires", 210135000, "Portuguese","Brazilian Real R$");
					break;
	case 2278:
			setCountry("New Zealand", "Wellington", 210135000, "Portuguese","Brazilian Real R$");
						break;
	default:
		countryName = "We do not have this country in our selection";
		capital = "No Capital City for this selection";
		population = 0;
		nationalLanguage = "No Language for this selection";
		currency = "No Currency for this selection";

	}

	print() ;

}

