//============================================================================
// Name        : StaticKeyword.cpp
// Author      : George Quentin
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;


//.h file
class Test {
// if you declare a variable static, it means that there is one version of that variable which is shared for all the objects, so the variable becomes associated with the class and not the object

private :
	//this means that it is shared to all objects of this Test class and it is associated with this Test class
	//when you create a static variable like this, you have to initialize it somewhere, because it is static the memory allocation will be create when you initialize the static variable
	static int count;

public:
	// static methods are accessed via the class and they can only access static variables, meaning you can access instance variables or non static variable in a class because the method is static meaning it forbids it from happening
	static void showInfo(){
		cout << "We just accessed static variable count which is " << count << endl;
	}
};


//.cpp file source
int Test::count = 7;


// you can also create static methods, and again this will not be associate with particular objects but with the class
int main() {


	cout << Test::count << endl;


	return 0;
}
