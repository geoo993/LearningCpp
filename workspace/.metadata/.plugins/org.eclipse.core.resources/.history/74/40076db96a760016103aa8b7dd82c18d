//============================================================================
// Name        : AllocatingMemory.cpp
// Author      : George Quentin
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;


class Film{

private:
	string title;

public:
	Film(){ cout << "Film Created by Constructor..." << endl; };
	~Film(){ cout << "Film Disposed by Destructor..." << endl; };
	Film(const Film& other): title(other.title) { cout << "Film Created by copying..." << endl; };
	Film(string title): title(title){}
	void print() const {
		cout << title << " is a great film " << endl;
	};
};


int main() {

	//you can use new on any type at all, like int, long, double, float, classes, functions. So don't forget to use delete to deallocate memory when you created new
	Film *pFilm = new Film();
	delete pFilm;// you deallocate memory when method/class created has new

	//you can allocate memory of primitive types with new as well, never forget to delete after.
	float *pValue = new float();
	//long *pValue = new long();
	//double *pValue = new double();
	//string *pValue = new string();
	//int *pValue = new int();
	delete pValue;// you can deallocate memory of  primitive type that have new as well new well

	//you can also allocate memory with array of primitive types or objects
	//Film *pFilms = new Film[10];
	Film *pFilms = new Film[10]{};
	delete pFilms;// you deallocate memory when method/class created has new


	cout << "" << endl; // prints !!!Hello World!!!
	return 0;
}
