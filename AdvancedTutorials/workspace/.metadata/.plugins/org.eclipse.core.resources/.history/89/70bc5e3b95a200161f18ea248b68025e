//============================================================================
// Name        : Functors.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;

struct MatchTest{
	//we can overload the round () brackets operator this way
	//here, in the first round bracket, we are dealing with the round bracket operator and the second round bracket is the one that takes the argument lists, meaning the variables that you want to pass in
	bool operator()(string &str){
		return str == "five"
	}

};

// in c++ 11 you have lambda expressions which are syntactic sugar really for functor,
//here we are going to look at the pre c++ 11 syntax, which also works in c++ 11. which allows us to pass blocks of code around in variables
void check(string s){

}


int main() {

	// functors are another way of passing blocks of code to function, they are an alternative to function pointers
	// functors may have some advantages as oppose to function pointers
	return 0;
}
