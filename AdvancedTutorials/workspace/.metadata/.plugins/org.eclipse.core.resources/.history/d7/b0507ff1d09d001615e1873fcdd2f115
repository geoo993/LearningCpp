//============================================================================
// Name        : BinaryFiles.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>

using namespace std;

// how to write a struct in a binary file

//the only difference between a struct and a class is that the members of a struct are public by default
//structs are mostly used to write into files
//c++ pads structs to make them more efficient to transfer them to and from memory

struct Person{

	//when trying to store for example a text, that text is not directly stored in this variable
	//when we declare variables in c++, they are stored in an area of memory known as a stack, this is a relatively small area of memory thats used for storing variables or for keeping track of function calls.
	//we cannot use string because it allocates extra memory to store the actual text
	//string name;

	char name[50];
	int age;
	double weight;

};

int main() {

	Person p;

	//you can check how the padding works by just calling the sizeof Person, it will always be an even number and that is because of the padding that is done to it.
	cout << sizeof(p.age) << endl;//


	return 0;
}
