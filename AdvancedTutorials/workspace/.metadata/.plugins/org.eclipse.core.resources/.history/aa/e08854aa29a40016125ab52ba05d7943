//============================================================================
// Name        : ReinterpretCast.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;

class Film {

public:
	virtual void print() {
		cout << "Film is the Parent Class!" << endl;
	}

};

class Hostle: public Film {

};

class Oculus: public Film {

};

class Chucky: public Film {

};

int main() {

	Film film;
	Hostle hostle;
	Oculus oculus;
	Chucky chucky;

	Film *pFilm1 = &hostle;
	Oculus *pOculus = dynamic_cast<Oculus *> (pFilm1);//casting Oculus to Hostle which are both subclasses of Film supperclass
	Chucky *pChucky = static_cast<Chucky *> (pFilm1);

	if (pOculus == nullptr) {
		cout << "Invalid Cast" << endl;
	} else {
		cout << pOculus << endl;
	}

	return 0;
}
