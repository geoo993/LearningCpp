//============================================================================
// Name        : AbstractClasses.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;


// an abstract class is a class containing methods which have no implementation and we say that they are pure virtual functions/methods
class Animal {

public:
	//in this case, Animal is an abstract class, because when is it has any pure virtual methods, it is called an abstract class
	//because Animal is an abstract class, we cannot instantiate it because abstract classes cannot be intsatiated
	virtual void print() = 0; //this is a pure virtual function, a class which contains a pure virtual function is called an abstract class
	virtual int age(int age) = 0;
};


class Dog: public Animal {

public:
	virtual void print() {
		cout << "Dog: woof! woof! woof!" << endl;
	}
};

class Chiwawa: public Dog {
private:
	int a;
public:
	virtual int age(int a){
		a = a
	}
};

class Cat: public Animal {
public:
	virtual void print() {
		cout << "Cat meoww! meooow!" << endl;
	}
};

int main() {

	Dog dog;
	dog.print();

	return 0;
}
